[gd_scene load_steps=8 format=2]

[ext_resource path="res://players/playerimage.png" type="Texture" id=1]
[ext_resource path="res://players/player2.gd" type="Script" id=2]

[sub_resource type="PhysicsMaterial" id=2]
bounce = 0.5

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 25, 25 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec4 line_color : hint_color = vec4(1.0);
uniform float line_thickness : hint_range(0, 10) = 1.0;

const vec2 OFFSETS[8] = {
	vec2(-1, -1), vec2(-1, 0), vec2(-1, 1), vec2(0, -1), vec2(0, 1), 
	vec2(1, -1), vec2(1, 0), vec2(1, 1)
};

void fragment() {
	vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
	float outline = 0.0;
	
	for (int i = 0; i < OFFSETS.length(); i++) {
		outline += texture(TEXTURE, UV + size * OFFSETS[i]).a;
	}
	outline = min(outline, 1.0);
	
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, line_color, outline - color.a);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/line_color = Color( 1, 1, 1, 1 )
shader_param/line_thickness = 3.0

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 25, 25 )

[node name="player2" type="RigidBody2D"]
position = Vector2( 0.8, 0.8 )
physics_material_override = SubResource( 2 )
gravity_scale = 5.0
linear_damp = 0.0
script = ExtResource( 2 )
__meta__ = {
"_edit_group_": true
}

[node name="raycast_holder" type="Node2D" parent="."]
visible = false

[node name="RayCast2D" type="RayCast2D" parent="raycast_holder"]
enabled = true
cast_to = Vector2( 0, 10 )

[node name="coll_player2" type="CollisionShape2D" parent="."]
scale = Vector2( 0.8, 0.8 )
shape = SubResource( 1 )

[node name="spr_player2" type="Sprite" parent="."]
material = SubResource( 5 )
scale = Vector2( 0.4, 0.4 )
texture = ExtResource( 1 )

[node name="Area2D" type="Area2D" parent="spr_player2"]
scale = Vector2( 2, 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="spr_player2/Area2D"]
shape = SubResource( 3 )

[connection signal="area_entered" from="spr_player2/Area2D" to="." method="_on_Area2D_area_entered"]
[connection signal="body_shape_entered" from="spr_player2/Area2D" to="." method="_on_Area2D_body_shape_entered"]
